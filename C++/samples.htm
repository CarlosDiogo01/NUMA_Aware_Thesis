<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>Samples</title>
</head>
<style type="text/css">
body { 
	color:#333333; 
	background-color:#ffffff; 
	font-family: Verdana, sans-serif, sans; 
	font-size: 12px; 
	margin-left: 30px;
	font-weight: normal;
}
p { 
	font-size: 11pt; 
	line-height: 120%; 
	margin-top: 0; 
	margin-bottom: 5pt;
}
p.Note { 
	margin-top: 0px; 
	margin-left: 25px;
	margin-bottom: 10pt;
}
p.twoColumnListHead { 
	color: #000000; 
	padding: 4px; 
	text-align: left; 
	width: auto; 
	margin-top: 0px; 
	margin-bottom: 0px; 
	margin-left: 0px;
	font-weight: bold;
}
p.pRelatedLink { 
	margin-top: 0px; 
	margin-bottom: 0px;
}	
table { 
	margin-bottom: 5pt; 
	border-collapse: collapse; 
	margin-top: 0.3em; 
	font-size: 10pt;
}	
td { 
	border: 1px #BABABA solid; 
	vertical-align: top; 
	font-size: 11pt;
	margin-bottom: 0px;
}
td, P.TableCell, td p { 
	margin-top: 0px; 
	margin-left: 0px;
	padding: 5px; 
	text-align: left; 
	font-size: 11pt; 
	line-height: 120%;
}
tr { 
	vertical-align:top;
}
td.noBorder { 
	border: 0px none;
}
th, th h3{ 
	padding: 4px; 
	text-align: left; 
	background-color: #555555; 
	font-weight: bold; 
	margin-top: 0; 
	margin-bottom: 0; 
	color: #FFFFFF; 
	font-size: 11pt;	
}
th { 
	border:1px #BABABA solid;
}
th h3.TableHead, th h3 { 
	padding:0;
}		
H3.TableHead{ 
	padding: 4px; 
	text-align: left; 
	background-color: #555555; 
	font-weight: bold; 
	margin-top: 0; 
	margin-bottom: 0; 
	color: #FFFFFF; 
	font-size: 11pt;
}
h1 {
	color: #0860A8;
	font-size: 15pt;
	padding-bottom: 1px;
	margin-left: 0pt;
	margin-bottom: 0;
	border-bottom:1px solid #0860A8;
	font-weight: normal;
}
h1.title { 
	border-bottom: 0 none; 
	margin-left: 0px;
	font-weight: normal;
}
h2 {
	color: #0860A8;
	font-weight: lighter;
	margin-top: 5pt;
	margin-bottom: 0;
	font-size: 13pt;
}
h3 {
	color: #333333;
	font-weight: bold;
	background-color: #ffffff;
	margin-top: 5pt;
	margin-bottom: 0;
	font-size: 11pt;
}
h3.NoteTipHead {
	color:#006699;
	margin-top:11pt;
	padding-bottom:0;
	line-height: 18px;
	text-transform: uppercase;
}
h3.NoteTipHead img {
	vertical-align: middle;
}
ul { 
	margin-bottom: 1em; 
	font-size: 11pt; 
	margin-top: 0px; 
	
}
ul ol { 
	margin-bottom: 0em; 
	font-size: 11pt;
	list-style-type: decimal;
}
ul ul { 
	margin-bottom:0px; 
	font-size: 11pt;
}
ul.Note {
	margin-left:25px;
}
td ul { 
	font-size: 11pt;
}
ol { 
	margin-bottom: 1em; 
	font-size: 11pt; 
	margin-top: 0px; 
	list-style-type: decimal;
}
ol ol { 
	list-style: upper-alpha; 
	margin-bottom: 0em; 
	font-size: 11pt;
}
ol.Note {
	margin-left:25px;
}
td ol { 
	font-size: 11pt;
}
ol ul { 
	margin-bottom:0px; 
	font-size: 11pt;
}
li { 
	font-size: 11pt; 
	margin-top: 0px; 
	line-height: 120%;
}
li p, ol p, ul p { 
	margin-bottom: 0.2em; 
	margin-top: 0.2em; 
	margin-left: 0px; 
	padding-left: 0px; 
	font-size: 11pt;
}
li table, td table, dd table { 
	margin-left: 0px;
}
indent li p { 
	margin-bottom: 0.2em; 
	margin-top: 0.2em; 
	margin-left: -2em;
}
P.Preformatted, pre { 
	line-height: 90%; 
	x-text-tab-stops: repeat 1in; 
	margin-top:0; 
	margin-bottom:0; 
	font-size: 10pt; 
	font-family: "Courier New", Courier, monospace; 
	background-color: #eeeeee;
}
td P.Preformatted, td pre { 
	line-height: 90%; 
	x-text-tab-stops: repeat 1in; 
	margin-top:0; 
	margin-bottom:0; 
	margin-left: 0px;
	font-size: 10pt; 
	font-family: "Courier New", Courier, monospace; 
	background-color: #eeeeee;
}
SPAN.Code, .Code { 
	font-family: "Courier New", Courier, monospace;
}
blockquote { 
	margin-top: 0px;
	margin-bottom: 0px;
}
HR { 
	color: #555555; 
	border: 0px;
	background: #555555; 
	height: 1px;
	margin-left: 0px;
}
SPAN.Big { 
	font-weight: bold; 
	font-size: 105%;
}
.welcomeImg { 
	padding-left: 0px; 
	padding-bottom: 0px; 
}
.IntelExt {
	color: #008080;
} 
dl { 
	margin-bottom: 1em; 
	font-size: 11pt; 
	margin-top: 0px; 
	line-height: 150%; 
}	
dt { 
	font-weight: bold; 
	margin-top: 1em;
}
dd {
	font-size: 11pt; 
	margin-left: 0px; 
}
dd p {
	margin-bottom: 0.2em; 
	margin-top: 0.2em; 
	font-size: 11pt;
}
.link_buttons {
	background-color: #EEEEEE;
	border-color: #EEEEEE;
	border-width: 1px;
	padding: 4px;
}
a:link {
	color: #0860A8;
	text-decoration: none;
}
a:visited { 
	color: #0860A8;
	text-decoration: none;	
}
a:active {
	color: #0860A8;
	text-decoration: underline;
}
a:hover {
	color: #0860A8;
	text-decoration: underline;
}
</style>
<body>
<h1>Included Samples</h1>
<p>The compiler samples included with  Intel&reg; C++ 
Composer XE are designed to illustrate specific compiler optimizations, features, 
tools, and programming concepts. </p>
<p>Many of the samples are small, single source files intended to 
illustrate the associated concept in a general way. Others are provided in .tar.gz files.  Please ensure that any files used are copied or untarred into a writeable directory.  The sample sources contain the command line options 
and, where applicable, environment settings needed for compilation on Linux*, OS X*, and Windows*.</p>
<p>Some of these samples are meant to illustrate features during compilation 
only and 
do not result in executables.</p>
<p>Samples are located in <code>&lt;install-dir&gt;/composer_xe_2013.X.XXX/Samples/en_US/C++</code>.</p>

<table border="1" width="95%" id="table1" cellspacing="0" cellpadding="10">
	<tr>
		<th width="15%">
		<h3 class="TableHead">Compiler Feature</h3>		</th>
		<th width="35%">
		<h3 class="TableHead">Location</h3>		</th>
		<th>
		<h3 class="TableHead">Description</h3>		</th>
	</tr>
	<tr>
		<td width="15%">Automatic optimizations</td>
		<td nowrap class="Code" width="35%">optimize/</td>
		<td>Illustrates how to use the automatic compiler options to quickly 
		change the performance of an application.</td>
	</tr>
	<tr>
		<td width="15%">Profile-guide Optimization (PGO)</td>
		<td nowrap class="Code" width="35%">pgo_samples/</td>
		<td>Illustrates profiling an application, generating PGO compiler 
		reports, and using the code-coverage and test-prioritization tools.</td>
	</tr>
	<tr>
		<td width="15%">Interprocedural Optimization (IPO)</td>
		<td nowrap class="Code" width="35%">ipo_samples/</td>
		<td><p>Illustrates using multi-file IPO compilation and generating IPO 
		compiler reports.</td>
	</tr>
	<tr>
		<td width="15%">OpenMP* support</td>
		<td nowrap class="Code" width="35%">openmp_samples/</td>
		<td><p>Illustrates using OpenMP* pragmas to create multi-threaded 
		applications.</td>
	</tr>
	<tr>
		<td width="15%">Intriniscs </td>
		<td nowrap class="Code" width="35%">intrinsic_samples/</td>
		<td><p>Illustrates using several instruction intrinsics supported in the compiler.</td>
	</tr>
	<tr>
	  <td>Intel&reg; Cilk&#8482; Plus </td>
	  <td nowrap class="Code">cilk_samples/</td>
	  <td><p>Illustrates parallel processing techniques using Intel&reg; Cilk&#8482; Plus. </p></td>
	  </tr>

	<tr>
		<td width="15%">Vectorization</td>
		<td nowrap class="Code" width="35%">vec_samples/</td>
		<td><p>Files for use with "Getting Started with the Intel® C++ Composer XE 2013 for Linux* OS -&gt; Using Auto-vectorization"</td>
	</tr>
	<tr>
      <td>Parallelization</td>
	  <td nowrap class="Code">tachyon.tar.gz</td>
	  <td><p>Project for use with "Getting Started with the Intel® C++ Composer XE 2013 for Linux* OS -&gt; Threading Your Applications"</p></td>
  </tr>
	<tr>
      <td>Guided Auto Parallel</td>
	  <td nowrap class="Code">guided_auto_parallel.tar.gz</td>
	  <td><p>Files for use with "Getting Started with the Intel® C++ Composer XE 2013 for Linux* OS -&gt; Using Guided Auto Parallelism"</p></td>
  </tr>
	<tr>
      <td>Intel® Many Integrated Core Architecture (Intel® MIC)</td>
	  <td nowrap class="Code">mic_samples/LEO_tutorial/</td>
	  <td><p>Files for use with "Getting Started with the Intel® C++ Composer XE 2013 for Linux* OS -&gt; Using the Intel® MIC Architecture"</p></td>
  </tr>
	<tr>
		<td width="15%">Offload pragma for Intel® MIC</td>
		<td nowrap class="Code" width="35%">mic_samples/intro_sampleC/</td>
		<td><p>Illustrates introductory level offload pragma uses with scalars, named arrays, and pointers.
		Use of alloc_if, if clause, __MIC__, OpenMP*, function calls within the offload region, copyable
		structs, and multiple coprocessors. </td>
	</tr>
	<tr>
		<td width="15%">Keywords _Cilk_shared and _Cilk_offload in C for Intel® MIC</td>
		<td nowrap class="Code" width="35%">mic_samples/shrd_sampleC/</td>
		<td><p>Illustrates the offload extension keywords _Cilk_shared and _Cilk_offload within C. Use of shared
		scalars, arrays, functions, structs, string allocation on target, OpenMP*, shared malloc API,
		pointer return, multiple coprocessors, and Intel® Cilk™ Plus language extensions. </td>
	</tr>
	<tr>
		<td width="15%">Keywords _Cilk_shared and _Cilk_offload in C++ for Intel® MIC</td>
		<td nowrap class="Code" width="35%">mic_samples/shrd_sampleCPP/</td>
		<td><p>Illustrates the offload extension keywords _Cilk_shared and _Cilk_offload within C++. Shared class
		member field/function access, member of different types, single/multiple class inheritance,
		shared malloc API, passing pointer to/address of shared class object, shared class static
		field member test, marking code region _Cilk_shared, shared class with virtual function member and 
		virtual function member with single/multiple class inheritance, and a link list example. </td>
	</tr>
</table>


<p>&nbsp;</p>
<table border="1" cellspacing="0" cellpadding="5" rules="none">
<tr><th style="height:30px; color:white; background-color:#555555" valign="center" align="left">Optimization Notice</th></tr>
<tr bgcolor="#ccecff">
  <td>
<p>Intel's compilers may or may not optimize to the same degree for non-Intel microprocessors for optimizations that are not unique to Intel microprocessors. These optimizations include SSE2, SSE3, and SSSE3 instruction sets and other optimizations. Intel does not guarantee the availability, functionality, or effectiveness of any optimization on microprocessors not manufactured by Intel.  Microprocessor-dependent optimizations in this product are intended for use with Intel microprocessors. Certain optimizations not specific to Intel microarchitecture are reserved for Intel microprocessors. Please refer to the applicable product User and Reference Guides for more
information regardîng the specific instruction sets covered by this notice. </p>
<p align="right">Notice revision #20110804
</p>
  </td>
</tr>
</table>

<p>&nbsp;</p>
<p>Copyright &copy; 2012 Intel Corporation. All Rights Reserved</p>
<p>* Other names and brands may be claimed as the property of others  </p>
</body>
</html>
